Base

The base folder is something like a foundation style for the project, as the name says. Something serves throughout the project. This includes the base, reset, typography, normalize. In my project, I just have base.scss with few styles which I need throughout the website.

    _base.scss
    _reset.scss
    _typography.scss
    _normalize.scss

Layout

The layout folder contains the style for a website layout, simple as the name suggests. This folder includes stylesheet for the navbar, sidebar, footer, header, etc.

    _navbar.scss
    _footer.scss
    _sidebar.scss
    _header.scss

Abstracts

The abstract folder is something different from other folders. Styles written in this folder do not compile to CSS. They are the helpers for other folders. Two major SASS Abstracts are variables and mixins. 

Variables are like a container that holds some value, later it can be used in other CSS property values. Later we can change the value of that variable so that the entire project gets updated with just one line of code.

Mixins are something that helps in reducing the effort of writing long codes or reusable codes. The best example would be media queries. They are really effective and easy to use.

    _variables.scss
    _colors.scss
    _mixins.scss

Components

Components are a set of codes which has their character. It might be just one HTML element or a block of HTML elements. 

Alert box, button, label, badge, list group, panel, modal are some of the common components we see on websites.

Apart from these common components, we can create our components. For example, Course card, infobox, product card, success popup, profile card, and more.

    _alert.scss
    _button.scss
    _badge.scss
    _label.scss
    _modal.scss
    _course-card.scss
    _infobox.scss
    _success-popup.scss
    _profile-card.scss

Pages

The pages folder contains the style for targeting pages. It can be individual pages or a set of pages. 

In my experience, I havenâ€™t used this folder much apart from one e-commerce project. I hade a few files in it, Login, Signup, Product, Product single, Blog, Blog single, and Invoice. Use this folder if itâ€™s really required, if not just delete this folder, it is not something you have to use all the folder as the name says 7-1 SASS architecture. Itâ€™s all up to you on understanding it.

    _product.scss
    _product-single.scss
    _blog.scss
    _blog-single.scss
    _invoice.scss
    _login.scss
    _signup.scss

Themes

Themes folder is related to an overview of the project look. It could be Light theme, dark theme, blue theme, etc.. This is also a folder used in very rare cases. Usually, this folder is used in template websites and open source projects. 

    _dark-theme.scss
    _light-theme.scss
    _material-theme.scss
    _flat-theme.scss

Vendors

All the external styles or 3rd party styles are placed in the Vendor folder. It could be libraries or frameworks. The most commonly used vendors are Bootstrap, Owl Carousel, JqueryUI, etc.

    _bootstrap.scss
    _owl-carousel.scss
    _jqueryui.scss

Vendors modifications (Optional additional folder)

In some rare cases, we have to override the vendorâ€™s styles to match our theme or style. It is not recommended to overwrite styles in the vendorâ€™s folder. Instead, we can create a separate folder for modifying or overriding the vendor styles. This will a good idea.

    _bootstrap-button-mod.scss
    _bootstrap-alert-mod.scss

source: "https://kiranworkspace.com/sass-architecture/#base"

BEM = Block Element Modifier 

At the 53 minute mark, this video tells you how to usr the BEM naming convention within Scss (Sass): https://www.youtube.com/watch?v=jfMHA8SqUL4

Happy Styling!ðŸ˜Ž